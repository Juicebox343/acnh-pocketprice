{"version":3,"sources":["helperFunctions.js","Collection.js","SearchForm.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["monthCalc","range","includes","split","replace","fancyHour","numHour","Collection","state","detailExpand","creatureDetails","React","createRef","expandCreatures","setState","prevState","handleAddToPocketBtn","data","props","addToPocket","key","type","setTime","slice","time","details","this","className","onClick","src","alt","item","itsLowerCase","toUpperCase","hasOwnProperty","timeHour","Component","SearchForm","ref","searchRef","name","placeholder","onChange","e","searchBar","Header","href","App","bugs","fish","seaCreatures","misc","search","isChecked","month","day","hour","minute","event","keyword","target","value","filterStates","selectedCollection","checked","rightNow","Date","getMonth","getDay","date","getDate","getHours","getMinutes","setTimeout","fishResults","seaCreaturesResults","bugsResults","miscResults","Object","keys","fishesData","map","filter","toLowerCase","indexOf","sort","a","b","seaCreaturesData","creature","bugsData","miscData","onChangeFunction","length","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c45b6bb.chunk.js","sourcesContent":["export function timeFix(time){\r\n    if(time === '' || time === 'undefined'){\r\n        return 'All Day'\r\n    }\r\n    return time;\r\n}\r\n\r\nexport function monthCalc(range){\r\n    let dashSplit = [];\r\n    let andSplit = [];\r\n    let wordMonth = [];\r\n\r\n    if(range.includes('-')){\r\n        dashSplit = range.split('-');\r\n    }\r\n   \r\n    if(range === ''){\r\n        return 'All Year'\r\n    } else {\r\n       return range\r\n.replace('12','December')\r\n.replace('11','November')\r\n.replace('10','October')                    \r\n.replace('9','September')\r\n.replace('8','August')\r\n.replace('7','July')\r\n.replace('6','June')\r\n.replace('5','May')\r\n.replace('4','April')\r\n.replace('3','March')\r\n.replace('2','February')\r\n.replace('1','January')\r\n }\r\n \r\n   \r\n}\r\n\r\n\r\nexport function capitalizeNames(creatureName){\r\n    const capitalizeString = creatureName.replace(/\\b\\w/g, function(itsLowerCase) {\r\n        return itsLowerCase.toUpperCase();\r\n    })\r\n    return capitalizeString\r\n}\r\n\r\nexport function fixWeekDay(numDay){\r\n    let weekday = new Array(7);\r\n        weekday[0] = \"Sun.\";\r\n        weekday[1] = \"Mon.\";\r\n        weekday[2] = \"Tue.\";\r\n        weekday[3] = \"Wed.\";\r\n        weekday[4] = \"Thu.\";\r\n        weekday[5] = \"Fri.\";\r\n        weekday[6] = \"Sat.\";\r\n    \r\n    return weekday[numDay]\r\n}\r\n\r\nexport function fixMonth(numMonth){\r\n    let month = new Array(12);\r\n        month[0] = \"January\";\r\n        month[1] = \"February\";\r\n        month[2] = \"March\";\r\n        month[3] = \"April\";\r\n        month[4] = \"May\";\r\n        month[5] = \"June\";\r\n        month[6] = \"July\";\r\n        month[7] = \"August\";\r\n        month[8] = \"September\";\r\n        month[9] = \"October\";\r\n        month[10] = \"November\";\r\n        month[11] = \"December\";\r\n\r\n    return  month[numMonth-1]\r\n}\r\n\r\nexport function fixMinute(numMinute){\r\n    if(numMinute < 10){\r\n        return '0' + parseInt(numMinute)\r\n    } \r\n    return numMinute\r\n}\r\n\r\nexport function fixHour(numHour){\r\n    if(numHour > 12){\r\n        return numHour - 12\r\n    } \r\n    return numHour\r\n}\r\n    \r\nexport function fancyHour(numHour){\r\n    if(numHour > 12){\r\n        return numHour - 11 + 'PM'\r\n    } \r\n    return numHour = 'AM'\r\n}\r\n    \r\n","import React from 'react';\r\nimport {monthCalc, capitalizeNames, timeFix, fancyHour} from './helperFunctions';\r\n\r\nclass Collection extends React.Component{\r\n \r\n  state = {\r\n    detailExpand: false\r\n  }\r\n\r\n  creatureDetails = React.createRef();\r\n\r\n  expandCreatures = () =>{\r\n    this.setState(prevState => ({\r\n      detailExpand: !prevState.detailExpand\r\n    }))\r\n  }\r\n\r\n  handleAddToPocketBtn = (data) =>{\r\n    this.props.addToPocket(data.key, data.type)\r\n  }\r\n\r\n  setTime = () => {\r\n    if(this.props['details']['availability']['isAllDay']){\r\n      return 'Available All Day '\r\n    } else {\r\n      let lastHour = this.props['details']['availability']['time-array'].slice(-1)\r\n      return 'Available until ' + fancyHour(lastHour)\r\n    }\r\n    \r\n  }\r\n\r\n    render(){\r\n      const details = {...this.props.details}\r\n      return(\r\n        \r\n        <tr className='creature-data'>  \r\n          <td>\r\n            <button className='button-data' onClick={this.expandCreatures}>\r\n              \r\n                  <tr className='headline-details'>\r\n                    <td>\r\n                      <img src={`/icons/${this.props.type}/${details['file-name']}.png`} alt={details.item}/>\r\n\r\n                      <h4>{capitalizeNames(details['name']['name-USen'])}</h4>\r\n                    </td>\r\n                    \r\n                    <td>\r\n                      {this.props.details.hasOwnProperty(['availability']) && this.props['details']['availability']['time-array'].includes(this.props.timeHour) && <span className='availability'>{this.setTime()}</span>}\r\n                    </td>\r\n\r\n                    <td>\r\n                      <span className='cost'>{details['price']} Bells</span> \r\n                    </td>\r\n                  </tr>\r\n      \r\n                {this.state.detailExpand && details.hasOwnProperty(['availability']) &&\r\n                <tr className='creature-details'>\r\n                  <td>\r\n                      {details.hasOwnProperty(['availability']['location']) && <p>Location: {details['availability']['location']}</p>}\r\n                      {details.hasOwnProperty(['shadow']) && <p>Shadow: {details['shadow'].split(' ')[0]}</p>}\r\n                      {details.hasOwnProperty(['availability']) && <p>Time: {timeFix(details['availability']['time'])}</p>}\r\n                      {details.hasOwnProperty(['availability']) && <p>N. Hemisphere: {monthCalc(details['availability']['month-northern'])}</p>}\r\n                      {details.hasOwnProperty(['availability']) && <p>S. Hemisphere: {monthCalc(details['availability']['month-southern'])}</p>}\r\n                      {details.hasOwnProperty(['availability']['rarity']) && <p>Rarity: {details['availability']['rarity']}</p>}\r\n                      {details.hasOwnProperty(['speed']) && <p>Speed: {details['speed']}</p>}\r\n                  </td>\r\n                </tr>\r\n                }\r\n             \r\n            </button>\r\n            </td>\r\n        </tr>\r\n          \r\n          \r\n          \r\n      \r\n    )\r\n  }\r\n}\r\n  export default Collection;\r\n  ","import React from 'react';\r\n\r\n\r\nclass SearchForm extends React.Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className='search-area'>\r\n                <div className='searchForm' ref={this.searchRef}>      \r\n                    <input name='search' type='text' placeholder='Search..' onChange={(e)=>this.props.searchBar(e)} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n    \r\n        return(\r\n            \r\n            <header>\r\n                <div>\r\n                <a className='kofi' href='https://ko-fi.com/heiserj'><img src='./kofi2.png' alt='Kofi link for the developer'/></a>\r\n                </div>\r\n               \r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport Collection from './Collection';\nimport SearchForm from './SearchForm';\nimport bugsData from './data/bugs.json';\nimport fishesData from './data/fishes.json';\nimport miscData from './data/misc1.json';\nimport seaCreaturesData from './data/sea.json';\nimport Header from './Header';\n\nclass App extends React.Component{\n  state = {\n    bugs: {},\n    fish: {},\n    seaCreatures: {},\n    misc: {},\n    search: '',\n    isChecked: false,\n    month: null,\n    day: null,\n    hour: null,\n    minute: null\n  }\n\n  searchBar = (event) =>{\n    let keyword = event.target.value;\n    this.setState({search:keyword}, this.filterStates())\n  }\n  \n  selectedCollection = (e) => {\n    this.setState({selectedCollection: e})\n  }\n\n  onChange = (e) =>{\n    this.setState({\n      isChecked: e.target.checked\n    })\n  }\n\n  setTime = () =>{\n    let rightNow = new Date();\n    this.setState({\n      month: rightNow.getMonth() + 1,\n      day:  rightNow.getDay(),\n      date: rightNow.getDate(),\n      hour: rightNow.getHours(),\n      minute: rightNow.getMinutes()\n    });\n    setTimeout(this.setTime, 60000)\n  }\n    \n  componentDidMount(){\n    this.setTime()\n    this.filterStates()\n  }\n\n  // updateStates(){\n  //   this.setState({\n  //     fish: fishResults,\n  //     seaCreatures: seaCreaturesResults,\n  //     bugs: bugsResults,\n  //     misc: miscResults,\n  //     search: searchInput,\n  //     isChecked: isChecked\n  //   })\n  // }\n\n\n  // filterStates = (collectible, type) => {\n  //   let filtered = Object.keys(collectible).map(key => {return collectible[key]})\n  //                 .filter(collectible => collectible['name']['name-USen']\n  //                 .toLowerCase()\n  //                 .indexOf(this.state.search.toLowerCase()) !== -1)\n  //                 .filter(collectible => collectible['availability']['time-array'].includes(parseInt(this.state.hour)))\n  //                 .sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1)\n  //   return(\n  //     Object.keys(filtered).length > 0 && \n  //       Object.keys(filtered).map(key => \n          \n  //             <Collection \n  //                 key={key} \n  //                 index={filtered[key]['name']['name-USen']}\n  //                 details={filtered[key]}\n  //                 timeHour={this.state.hour}\n  //                 type={type}\n  //             />\n         \n  //       )\n  //   )\n  // }\n  filterStates = () =>{\n    let fishResults = []\n    let seaCreaturesResults = [] \n    let bugsResults = []\n    let miscResults = []\n\n    // if(this.state.isChecked === true){\n    //    fishResults = Object.keys(fishesData).map(key => {return fishesData[key]}).filter(fish => fish['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).filter(fish => fish['availability']['time-array'].includes(parseInt(this.state.hour))).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n    //    seaCreaturesResults = Object.keys(seaCreaturesData).map(key => {return seaCreaturesData[key]}).filter(creature => creature['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).filter(creature => creature['availability']['time-array'].includes(parseInt(this.state.hour))).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n    //    bugsResults = Object.keys(bugsData).map(key => {return bugsData[key]}).filter(bugs => bugs['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).filter(bugs => bugs['availability']['time-array'].includes(parseInt(this.state.hour))).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n    //    miscResults = Object.keys(miscData).map(key => {return miscData[key]}).filter(item => item['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n    // } else {\n       fishResults = Object.keys(fishesData).map(key => {return fishesData[key]}).filter(fish => fish['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n       seaCreaturesResults = Object.keys(seaCreaturesData).map(key => {return seaCreaturesData[key]}).filter(creature => creature['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n       bugsResults = Object.keys(bugsData).map(key => {return bugsData[key]}).filter(bugs => bugs['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n       miscResults = Object.keys(miscData).map(key => {return miscData[key]}).filter(item => item['name']['name-USen'].toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1).sort((a, b) => (a.name['name-USen'] > b.name['name-USen']) ? 1 : -1);\n    // }\n  \n    this.setState({\n        fish: fishResults,\n        seaCreatures: seaCreaturesResults,\n        bugs: bugsResults,\n        misc: miscResults\n      })\n\n  }\n\n  render(){\n   \n    return(\n      <div className='container'>\n        <Header/>\n        <main>\n        \n          <SearchForm searchBar={this.searchBar} onChangeFunction={this.onChange} isChecked={this.state.isChecked} />\n         \n          <div className='creature-row'>   \n  \n          <div className='list-top'>\n            {/* <input id='availability-checkbox' type='checkbox' checked={this.state.isChecked} onChange={this.onChange}/>\n            <label className='availability-filter-label' htmlFor='availability-checkbox'></label> */}\n          </div>\n               \n                {this.state.fish.length > 0 && \n                  <table>\n                  <th><h3>Fishes</h3></th>\n                    <tbody>\n                      {Object.keys(this.state.fish).map(key => \n                          <Collection \n                              key={key} \n                              index={this.state.fish[key]['name']['name-USen']}\n                              details={this.state.fish[key]}\n                              timeHour={this.state.hour}\n                              type='fish'\n                          />\n                        )}\n                      </tbody>\n                    </table>\n                }\n\n                {this.state.bugs.length > 0 && \n                  <table>\n                  <th><h3>Bugs</h3></th>\n                    <tbody>\n                      {Object.keys(this.state.bugs).map(key => \n                          <Collection \n                              key={key} \n                              index={this.state.bugs[key]['name']['name-USen']}\n                              details={this.state.bugs[key]} \n                              timeHour={this.state.hour}\n                              type='bugs'\n                          />\n                        )}\n                    </tbody>\n                  </table>\n                }\n\n                {this.state.seaCreatures.length > 0 &&\n                  <table>\n                    <th><h3>Sea Creatures</h3></th>\n                    <tbody>\n                      {Object.keys(this.state.seaCreatures).map(key => \n                          <Collection \n                              key={key} \n                              index={this.state.seaCreatures[key]['name']['name-USen']}\n                              details={this.state.seaCreatures[key]} \n                              timeHour={this.state.hour}\n                              type='sea'\n                          />\n                        )}\n                    </tbody>\n                  </table>\n                }\n\n                {this.state.misc.length > 0 &&\n                  <table>\n                    <th><h3>Misc Collectibles</h3></th>\n                    <tbody>\n                      {Object.keys(this.state.misc).map(key => \n                          <Collection \n                              key={key} \n                              index={this.state.misc[key]['name']['name-USen']}\n                              details={this.state.misc[key]} \n                              timeHour={this.state.hour}\n                              type='misc'\n                          />\n                        )}\n                    </tbody>\n                  </table>\n                }\n          </div>\n        </main>\n        \n        \n      </div>\n      \n    )\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}